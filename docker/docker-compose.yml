version: "3.8"
services:
  elasticsearch:
    image: elasticsearch:7.17.10
    networks: 
      - my-shared-network
    environment:
      - discovery.type=single-node
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    mem_limit: "1g"
  redis-cache:
    image: redis:6.2
    networks: 
      - my-shared-network
  logstash-agent:
    image: logstash:7.17.10
    volumes:
      - ./logstash-agent:/etc/logstash
    command: logstash -f /etc/logstash/logstash.conf
    depends_on:
      - elasticsearch
    ports:
      - 12201:12201/udp
    networks: 
      - my-shared-network
  logstash-central:
    image: logstash:7.17.10
    networks: 
      - my-shared-network
    volumes:
      - ./logstash-central:/etc/logstash
    command: logstash -f /etc/logstash/logstash.conf
    depends_on:
      - elasticsearch
  kibana:
    image: kibana:7.17.10
    ports:
      - 5601:5601
    networks: 
      - my-shared-network
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
  mysql:
    image: mysql:8.0.32
    environment:
      - "MYSQL_ROOT_PASSWORD=root"
      - "MYSQL_DATABASE=erp"
      - "MYSQL_USER=erp"
      - "MYSQL_PASSWORD=erp"
    networks: 
      - my-shared-network
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=root --execute \"SHOW DATABASES;\""
      interval: 10s
      timeout: 30s
      retries: 30
      start_period: 30s
  rabbitmq:
    image: erp.rabbitmq:0.0.1
    ports:
      - "15672:15672"
    networks: 
      - my-shared-network
    healthcheck:
        test: "rabbitmqctl status"
        interval: 5s
        timeout: 20s
        retries: 24
  backend:
    image: erp.backend:0.0.1
    environment:
      - DB_DRIVER=com.mysql.cj.jdbc.Driver
      - DB_URL=jdbc:mysql://mysql:3306/erp
      - DB_USERNAME=erp
      - DB_PASSWORD=erp
      - DB_PLATFORM=org.hibernate.dialect.MySQL5InnoDBDialect
      - RMQ_HOSTNAME=rabbitmq
    ports:
      - "8082:8082"
    networks: 
      - my-shared-network
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      logstash-agent:
        condition: service_started
    healthcheck:
      test: "curl -f localhost:8082/api/v1/healthcheck"
      interval: 10s
      timeout: 10s
      retries: 60
    logging:
      driver: gelf
      options:
        gelf-address: "udp://127.0.0.1:12201" # Logstash UDP input port
        tag: "backend"
    restart: always
  frontend:
    image: erp.frontend:0.0.1
    environment:
      - "ERP_BACKENDURL=http://backend:8082"
    ports:
      - "8081:8081"
    networks: 
      - my-shared-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: "curl -f localhost:8081/api/v1/healthcheck"
      interval: 2s
      timeout: 2s
      retries: 60
networks:
  my-shared-network: {}

volumes:
  mysql-data: {}
  elasticsearch-data: {}