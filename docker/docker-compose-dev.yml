version: "3.8"
services:
  elasticsearch:
    image: elasticsearch:8.10.2
    networks: 
      - my-shared-network
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
  kibana:
    image: kibana:8.10.2
    ports:
      - 5601:5601
    networks: 
      - my-shared-network
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
  logstash-backend:
    image: logstash:8.10.2
    volumes:
      - ./logstash-backend:/etc/logstash
      - backend-logs:/logs
    command: logstash -f /etc/logstash/logstash.conf
    depends_on:
      - elasticsearch
    networks: 
      - my-shared-network
  logstash-frontend:
    image: logstash:8.10.2
    volumes:
      - ./logstash-frontend:/etc/logstash
      - frontend-logs:/logs
    command: logstash -f /etc/logstash/logstash.conf
    depends_on:
      - elasticsearch
    networks: 
      - my-shared-network
  mysql:
    extends:
      file: docker-compose-prod.yml
      service: mysql
  rabbitmq:
    extends:
      file: docker-compose-prod.yml
      service: rabbitmq
    ports:
      - "${RABBITMQ_ADMIN_PORT:-15672}:15672"
  backend:
    extends:
      file: docker-compose-prod.yml
      service: backend
    ports:
      - "${BACKEND_PORT:-8082}:8082"
    volumes:
      - backend-logs:/logs
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  frontend:
    extends:
      file: docker-compose-prod.yml
      service: frontend
    volumes:
      - frontend-logs:/logs
    depends_on:
      backend:
        condition: service_healthy

networks:
  my-shared-network: {}

volumes:
  mysql-data: {}
  elasticsearch-data: {}
  backend-logs: {}
  frontend-logs: {}